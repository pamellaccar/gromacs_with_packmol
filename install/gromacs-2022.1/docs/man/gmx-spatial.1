.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "GMX-SPATIAL" "1" "Apr 22, 2022" "2022.1" "GROMACS"
.SH NAME
gmx-spatial \- Calculate the spatial distribution function
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
gmx spatial [\fB\-s\fP \fI[<.tpr/.gro/...>]\fP] [\fB\-f\fP \fI[<.xtc/.trr/...>]\fP] [\fB\-n\fP \fI[<.ndx>]\fP]
            [\fB\-b\fP \fI<time>\fP] [\fB\-e\fP \fI<time>\fP] [\fB\-dt\fP \fI<time>\fP] [\fB\-[no]w\fP] [\fB\-[no]pbc\fP]
            [\fB\-[no]div\fP] [\fB\-ign\fP \fI<int>\fP] [\fB\-bin\fP \fI<real>\fP] [\fB\-nab\fP \fI<int>\fP]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH DESCRIPTION
.sp
\fBgmx spatial\fP calculates the spatial distribution function and
outputs it in a form that can be read by VMD as Gaussian98 cube format.
For a system of 32,000 atoms and a 50 ns trajectory, the SDF can be generated
in about 30 minutes, with most of the time dedicated to the two runs through
\fBtrjconv\fP that are required to center everything properly.
This also takes a whole bunch of space (3 copies of the trajectory file).
Still, the pictures are pretty and very informative when the fitted selection is
properly
made.
3\-4 atoms in a widely mobile group (like a free amino acid in solution) works
well, or select the protein backbone in a stable folded structure to get the SDF
of solvent and look at the time\-averaged solvation shell.
It is also possible using this program to generate the SDF based on some arbitrary
Cartesian coordinate. To do that, simply omit the preliminary gmx trjconv steps.
.sp
Usage:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP 1. 3
Use gmx make_ndx to create a group containing the atoms around which you want the SDF
.IP 2. 3
\fBgmx trjconv \-s a.tpr \-f a.tng \-o b.tng \-boxcenter tric \-ur compact \-pbc none\fP
.IP 3. 3
\fBgmx trjconv \-s a.tpr \-f b.tng \-o c.tng \-fit rot+trans\fP
.IP 4. 3
run \fBgmx spatial\fP on the \fBc.tng\fP output of step #3.
.IP 5. 3
Load \fBgrid.cube\fP into VMD and view as an isosurface.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fBNote\fP that systems such as micelles will require \fBgmx trjconv \-pbc cluster\fP
between steps 1 and 2.
.SS Warnings
.sp
The SDF will be generated for a cube that contains all bins that have some non\-zero
occupancy.
However, the preparatory \fB\-fit rot+trans\fP option to gmx trjconv implies that
your system will be rotating
and translating in space (in order that the selected group does not). Therefore the
values that are
returned will only be valid for some region around your central group/coordinate that
has full overlap
with system volume throughout the entire translated/rotated system over the course of
the trajectory.
It is up to the user to ensure that this is the case.
.SS Risky options
.sp
To reduce the amount of space and time required, you can output only the coords
that are going to be used in the first and subsequent run through gmx trjconv\&.
However, be sure to set the \fB\-nab\fP option to a sufficiently high value since
memory is allocated for cube bins based on the initial coordinates and the \fB\-nab\fP
option value.
.SH OPTIONS
.sp
Options to specify input files:
.INDENT 0.0
.TP
.B \fB\-s\fP [<.tpr/.gro/...>] (topol.tpr)
Structure+mass(db): tpr gro g96 pdb brk ent
.TP
.B \fB\-f\fP [<.xtc/.trr/...>] (traj.xtc)
Trajectory: xtc trr cpt gro g96 pdb tng
.TP
.B \fB\-n\fP [<.ndx>] (index.ndx) (Optional)
Index file
.UNINDENT
.sp
Other options:
.INDENT 0.0
.TP
.B \fB\-b\fP <time> (0)
Time of first frame to read from trajectory (default unit ps)
.TP
.B \fB\-e\fP <time> (0)
Time of last frame to read from trajectory (default unit ps)
.TP
.B \fB\-dt\fP <time> (0)
Only use frame when t MOD dt = first time (default unit ps)
.TP
.B \fB\-[no]w\fP  (no)
View output \&.xvg, \&.xpm, \&.eps and \&.pdb files
.TP
.B \fB\-[no]pbc\fP  (no)
Use periodic boundary conditions for computing distances
.TP
.B \fB\-[no]div\fP  (yes)
Calculate and apply the divisor for bin occupancies based on atoms/minimal cube size. Set as TRUE for visualization and as FALSE (\fB\-nodiv\fP) to get accurate counts per frame
.TP
.B \fB\-ign\fP <int> (\-1)
Do not display this number of outer cubes (positive values may reduce boundary speckles; \-1 ensures outer surface is visible)
.TP
.B \fB\-bin\fP <real> (0.05)
Width of the bins (nm)
.TP
.B \fB\-nab\fP <int> (16)
Number of additional bins to ensure proper memory allocation
.UNINDENT
.SH KNOWN ISSUES
.INDENT 0.0
.IP \(bu 2
When the allocated memory is not large enough, an error may occur suggesting the use of the \fB\-nab\fP (Number of Additional Bins) option or increasing the \fB\-nab\fP value.
.UNINDENT
.SH SEE ALSO
.sp
\fBgmx(1)\fP
.sp
More information about GROMACS is available at <\fI\%http://www.gromacs.org/\fP>.
.SH COPYRIGHT
2022, GROMACS development team
.\" Generated by docutils manpage writer.
.
